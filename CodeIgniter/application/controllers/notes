 idTunnistus as ID, k_aika as Time, ihmiset_kpl as Camera, odotettu_kpl as Sensors, sisa_lkm as Ingoing, ulos_lkm as Outgoing, leveys as Width 

elif osoite == "Alue" and len(my_list) == 6:
      sql = "INSERT INTO Alue (paikalla, e_meno, e_tulo, p_meno, p_tulo) VALUES (%s, %s, %s, %s, %s)"
      val = (paikalla, e_meno, e_tulo, p_meno, p_tulo)
      mycursor.execute(sql, val)
      mydb.commit()
      print(mycursor.rowcount, "Alue record inserted.")
      x = 1

if osoite == "Arduino1" and len(my_list) == 4:
      sql = "INSERT INTO Arduino1 (a1_aika, a1_leveys, a1_etaisyys) VALUES (%s, %s, %s)"
      val = (aika, lev, eta)
      mycursor.execute(sql, val)
      mydb.commit()
      print(mycursor.rowcount, "Arduino1 record inserted.")
      x = 1

    elif osoite == "Arduino2" and len(my_list) == 4:
      sql = "INSERT INTO Arduino2 (a2_aika, a2_leveys, a2_etaisyys) VALUES (%s, %s, %s)"
      val = (aika, lev, eta)
      mycursor.execute(sql, val)
      mydb.commit()
      print(mycursor.rowcount, "Arduino2 record inserted.")
      x = 1


http://172.20.240.54/images/snapshot-2019-12-05-095605-detected.jpg <- karikuva


<form action="/action_page.php">
  Time of detection:<br>
  <input type="text" name="image" value="yyyy-mm-dd-hhmmss"><br>
  <br>
  <input type="submit" value="Search">
</form>

<form onsubmit="window.location = 'http://172.20.240.54/images/snapshot-' + search.value '-detected.jpg'; return false;">
<input id="search" placeholder="Search" type="search" name="search"></input>
<input type="submit" value="Send">
</form>



// "Auto reload upon new Tunnistus-data"-script, too big of a hassle with ajax with given time
/*
var datatik;
var tik;

datatik = setInterval(data_update, 5000);

function data_update() {
 <?php # $row_chk = $this->db->query('SELECT COUNT(*) FROM Tunnistus'); ?>;
 data_chk = <?php # echo json_encode($row_chk, JSON_NUMERIC_CHECK); ?>; //esim. 5
  for (tik = 0; tik < 1; tik++) {
    data_first = data_chk; 
    alert("first = check");
  }

alert("5 sec tik");

 if (data_chk != data_first) {
   alert("reload!");
   location.reload();
   tik = 0;
 }
}
*/
// #############################################


$report_files = glob("\/user_uploads\/reportcards\/term\_10\/(.*)\_(.*)\.pdf");

pip install --install-option="--prefix=/usr/lib/python3/dist-packages" paho-mqtt

var dps = [];
for(var i = 0; i < row.length; i++) {
dps.push({ label: row[i].datecreated, y: newdataPoints[i].ihmiset_kpl) });
} 

 window.onload = function () {
  


 var chart = new CanvasJS.Chart("chartContainer", {
         animationEnabled: true,
         theme: "light2",
         title:{
                 text: "BIG VALVO DATA"
         },
         legend:{
                 cursor: "pointer",
                 verticalAlign: "center",
                 horizontalAlign: "right",
                 itemclick: toggleDataSeries
         },
         data: [{
                 type: "area",
                 fillOpacity: .2,
                 name: "to North",
                 indexLabel: "{y}",
                 yValueFormatString: "#0.##",
                 showInLegend: true,
                 dataPoints: dps
         },{
                 type: "area",
                 fillOpacity: .2,
                 name: "to South",
                 indexLabel: "{y}",
                 yValueFormatString: "#0.##",
                 showInLegend: true,
                 dataPoints: dps
         }]
 });
 chart.render();
  
 function toggleDataSeries(e){
         if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                 e.dataSeries.visible = false;
         }
         else{
                 e.dataSeries.visible = true;
         }
         chart.render();
 }
  
 }


<div id="chartContainer" style="height: 370px; width: 100%;"></div>
 <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

















datapoints:
 <?php echo json_encode($dataPoints1, JSON_NUMERIC_CHECK); ?>


foreach ($query2->result_array() as $tunniste_ihmiset)
         {
          echo '</br>';
          echo $tunniste_ihmiset['sum(ihmiset_kpl)'];
          echo '</br>';
         }

         foreach ($query2->result_array() as $tunniste_odotettu)
         {
          echo '</br>';
          echo $tunniste_odotettu['sum(odotettu_kpl)'];
          echo '</br>';
         }

         foreach ($query2->result_array() as $tunniste_date)
         {
          echo '</br>';
          echo $tunniste_date['datecreated'];
          echo '</br>';
         }




         catch(\PDOException $ex){
    print($ex->getMessage());
    }



 $link = new \PDO(   'mysql:host=127.0.0.1;dbname=valvo;charset=utf8', //'mysql:host=localhost;dbname=canvasjs_db;charset=utf8mb4',
                        'admin', //'root',
                        'beijing12', //'',
                        array(
                            \PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                            \PDO::ATTR_PERSISTENT => false
                        )
                    );

    $handle = $link->prepare('SELECT sum(ihmiset_kpl), sum(odotettu_kpl), date_format(k_aika, "%H - %d/%m/%y") as datecreated FROM Tunnistus WHERE k_aika > NOW() - INTERVAL 200 HOUR GROUP BY date_format(k_aika, "%H - %d/%m/%y") ORDER BY min(k_aika) ASC'); 
    $handle->execute(); 



    'SELECT sum(ihmiset_kpl), sum(odotettu_kpl), date_format(k_aika, "%H - %d/%m/%y") as datecreated FROM Tunnistus WHERE k_aika > NOW() - INTERVAL 48 HOUR GROUP BY date_format(k_aika, "%H - %d/%m/%y") ORDER BY min(k_aika) ASC'